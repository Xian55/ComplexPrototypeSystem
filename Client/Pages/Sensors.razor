@page "/sensors"

@inject ISensorService sensorService
@inject ISensorOnlineService sensorOnlineService
@inject NavigationManager navigationManager

<h3>Sensors</h3>

<table class="table">
    <thead>
        <tr>
            <th>Online</th>
            <th>GUID</th>
            <th>Name</th>
            <th>Interval</th>
            <th>IP Address</th>
            <th><i>Actions</i></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var sensor in sensorService.SensorSettings)
        {
            <tr>
                <td style="text-align: center">
                    @(Status(sensor))
                </td>
                <td>@sensor.Guid</td>
                <td>@sensor.Name</td>
                <td>@sensor.Interval</td>
                <td>@sensor.IPAddress</td>
                <td>
                    <button class="btn btn-primary" @onclick="() => ShowSensor(sensor.Guid)">
                        <i class="oi oi-pencil"></i>
                    </button>
                    <button class="btn btn-primary" @onclick="() => ShowSensorReports(sensor.Guid)">
                        <i class="oi oi-book"></i>
                    </button>
                </td>
            </tr>
        }
    </tbody>
</table>
<button class="btn btn-primary" @onclick="() => CreateNewSensor()">
    <i class="oi oi-plus"></i> Create New
</button>

@code {
    private IEnumerable<Guid> onlineSensors = Enumerable.Empty<Guid>();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            await sensorService.GetAll();
            onlineSensors = await sensorOnlineService.OnlineSensors();
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
    }

    protected void ShowSensor(Guid guid)
    {
        navigationManager.NavigateTo($"sensor/{guid}");
    }

    protected void CreateNewSensor()
    {
        navigationManager.NavigateTo($"sensor");
    }

    protected void ShowSensorReports(Guid guid)
    {
        navigationManager.NavigateTo($"sensorreports/{guid}");
    }

    protected MarkupString Status(SensorSettings sensor)
    {
        return onlineSensors.Contains(sensor.Guid)
            ? new MarkupString("<i class=\"oi oi-media-record icon-green\"></i>")
            : new MarkupString("<i class=\"oi oi-media-record icon-red\"></i>");
    }
}
